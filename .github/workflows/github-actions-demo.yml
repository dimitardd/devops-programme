name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
 Pylint:
   runs-on: ubuntu-latest
   steps:
     - name: Check out repo
       uses: actions/checkout@v2
       with:
         fetch-depth: 0
     - name: Set up Python
       uses: actions/setup-python@v3
       with:
         python-version: '3.10'
         cache: 'pip'
     - run: |
            pip3 install pylint black flake8 editorconfig-checker
            npm install -g markdownlint-cli
     - name: Check .editorconfig
       run: editorconfig-checker
     - name: Analysing the code with pylint
       run: pylint $(git ls-files '*.py')
     - name: Check markdown files
       run: markdownlint-cli .


  # Explore-GitHub-Actions:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
  #     - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  #     - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
  #     - run: echo "🖥️ The workflow is now ready to test your code on the runner."
  #     - name: List files in the repository
  #       run: |
  #         ls ${{ github.workspace }}
  #     - run: echo "🍏 This job's status is ${{ job.status }}."

  # lint:
  #   runs-on: ubuntu-latest
  #   needs: Explore-GitHub-Actions
  #   steps:
  #     - run: echo "Code lint"

  # unittest:
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - run: echo "Code unittest"
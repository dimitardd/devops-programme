name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]

env:
  IMAGE_TAG: dimitardd/dimitar-app02
jobs:
 Pylint:
   runs-on: ubuntu-latest
   steps:
     - name: Check out repo
       uses: actions/checkout@v2
       with:
         fetch-depth: 0
     - name: Set Node version
       uses: actions/setup-node@v4
       with:
         node-version: '20'
     - name: Set up Python
       uses: actions/setup-python@v3
       with:
         python-version: '3.10'
         cache: 'pip'
     - run: |
            pip install pylint black flake8 flask
            npm install -g markdownlint-cli editorconfig-checker
     - name: Check Editorconfig
       run: editorconfig-checker
     - name: Analysing the code with pylint
       run: pylint --disable=C0111,C0114,C0115,C0116 $(git ls-files '*.py')
     - name: Markdownlint config file
       run: |
         echo '{
           "MD012": false,
           "MD013": false,
           "line-lenght": false
          }' > .markdownlint.json
     - name: Markdown lint check
       run: markdownlint 'README.md' --ignore node_modules
 UnitTest:
    needs: Pylint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: |
            pip install flask
      - name: Run app test
        run: |
          cd app
          python -m unittest app_test.py
 CheckforSecrets:
    needs: UnitTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      - name: Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 TrivySecurity:
   runs-on: ubuntu-latest
   needs: UnitTest
   steps:
     - uses: actions/checkout@v4
     - name: Trivy Vulnerability Scan
       uses: aquasecurity/trivy-action@master
       with:
         scan-type: 'fs'
         ignore-unfixed: true
         format: 'sarif'
         output: 'trivy-output.sarif'
         severity: 'CRITICAL'
     - name: Trivy Scan Output
       uses: github/codeql-action/upload-sarif@v3
       with:
         sarif_file: 'trivy-output.sarif'
 SonarcloudSecurity:
   runs-on: ubuntu-latest
   needs: UnitTest
   steps:
   - uses: actions/checkout@v4
     with:
       fetch-depth: 0
   - name: SonarCloud Scan
     uses: sonarsource/sonarcloud-github-action@master
     env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
     with:
       projectBaseDir: app
       args: >
         -Dsonar.projectKey=dimitardd_devops-programme
         -Dsonar.organization=dimitardd
 Build-Test:
   name: Build Image and Test
   runs-on: ubuntu-latest
   if: ${{ !cancelled() && !failure() }}
   needs: [ SonarcloudSecurity, TrivySecurity, CheckforSecrets ]
   steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build an image from Dockerfile
        run: |
          docker build -t ${{ env.IMAGE_TAG }}:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ env.IMAGE_TAG }}:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results-container.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results-container.sarif'
 Deploy:
   name: Push container to docker hub
   runs-on: ubuntu-latest
   if: ${{ !cancelled() && !failure() }}
   needs: [ Build-Test ]
   steps:
     - name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Push
       uses: docker/build-push-action@v6
       with:
         push: true
         tags: '${{ env.IMAGE_TAG }}:${{ github.sha }}'
       if: success()  # Only push if get login is ok
